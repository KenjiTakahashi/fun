ometa XMLParser <: Parser {
	XML			= XMLSingle:oc									-> ['XML', oc[0], oc[1]]
				| XMLOpen:o XMLClose:c							-> ['XML', o, c]
				| XMLOpen:o XML:xml XMLClose:c					-> ['XML', o, xml, c]
				| XMLOpen:o XMLContent:content XMLClose:c		-> ['XML', o, content, c],
	
	XMLOpen		= "<" az09+:tagName _ XMLAttr*:attrs ">"		-> ['XMLOpen', tagName.join(''), attrs],
				
	XMLClose	= "</" az09+:tagName ">"						-> ['XMLClose', tagName.join('')],
	
	XMLSingle	= "<" az09+:tagName _ XMLAttr*:attrs "/>"		-> [['XMLOpen', tagName.join(''), attrs
																	],['XMLClose', tagName.join('')]],
				
	XMLContent	= (az09|space)+:content							-> ['XMLContent', content.join('')],
	
	XMLAttr		= az09+:name "=" '"' az09+:val '"' _			-> ['XMLAttr', name.join(''), val.join('')]
}


ometa FunParser <: XMLParser {
	Fun			= FunIf:ifBlock Fun:funCode								-> [ifBlock, funCode]
				| FunFor:forBlock Fun:funCode							-> [forBlock, funCode]
				| FunStmnt:funStmnt	Fun:funCode							-> [funStmnt, funCode]
				| ""													-> [],
	
	FunIf		= "if" "(" FunStmnt:condCode ")" "{" Fun:funCode "}"	-> ['IfBlock', condCode, funCode],
	
	FunFor		= "for" "(" FunVar:varName "over" FunProp:propName ")" 
						"{" Fun:funCode "}"								-> ['ForBlock', varName, propName, funCode],
	
	FunStmnt	= "funStmnt"											-> ['FunStmnt_NOT_IMPLEMENTED']
				| XML:xml 												-> xml,
				
	FunVar		= "funVar"												-> ['FunVar_NOT_IMPLEMENTED'],
	
	FunProp = "funProp"													-> ['FunProp_NOT_IMPLEMENTED']
}

ometa XMLTranslator <: Parser {
	XML			= ['XMLContent' :content]						-> content
				| ['XML' XMLOpen:open XMLClose:close]			-> (open + close)
				| ['XML' XMLOpen:open XML:xml XMLClose:close]	-> (open + xml + close),
			
	XMLOpen		= ['XMLOpen' :name XMLAttrs:attrs]				-> ('<' + name + attrs + '>'),
	
	XMLAttrs	= [XMLAttr*:attrs] 								-> attrs.join(''),
	
	XMLAttr		= ['XMLAttr' :name :val]						-> (' ' + name + '="' + val + '"'),
				
	XMLClose	= ['XMLClose' :name]							-> ('</' + name + '>')
}
