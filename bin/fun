#!/usr/bin/env node

var fs = require('fs'),
	sys = require('sys'),
	http = require('http'),
	path = require('path'),
	optimist = require('optimist'),
	tokenizer = require('../src/tokenizer'),
	parser = require('../src/parser'),
	resolver = require('../src/resolver'),
	compiler = require('../src/compiler'),
	map = require('std/map')

/* Commandline options
 *********************/
var argv = optimist.usage('Usage: $0 app.fun [--help --host=127.0.0.1 --port=8080]').argv

// Variables
var port = argv.port || 8080,
	host = argv.host || '127.0.0.1'

if (argv.h || argv.help) {
	sys.puts(fs.readFileSync('./help.txt'))
	process.exit(0)
}

http.createServer(function(req, res) {
	if (req.url == '/') { return welcome(res) }
	if (req.url == '/favicon.ico') { return res.end(); }
	if (req.url == '/develop') { return develop(res) }
	if (req.url == '/compile') { return compile(req, res) }
	var filePath = __dirname + '/..' + req.url,
		stat
	
	try {
		stat = fs.statSync(filePath)
	} catch(e) {
		res.end(e.stack ? e.stack : e.message ? e.message : e.toString())
		return
	}
	
	if (!stat.isFile()) {
		res.end('Not found. Try /simple.fun')
		return
	}
	try {
		res.end(compiler.compileFile(filePath))
	} catch(e) {
		res.end(e.stack ? e.stack : e.message ? e.message : e.toString())
	}
}).listen(port, host)
console.log("fun running in development mode on", host+':'+port)


function welcome(res) {
	var examples = map(fs.readdirSync('./examples'), function(example) {
		if (!example.match(/^[^\.].*\.fun$/)) { return '' }
		return '<li><a href="/examples/'+example+'">'+example+'</a></li>'
	}).join('\n')
	var apps = map(fs.readdirSync('./apps'), function(app) {
		if (app[0] == '.') { return '' }
		return '<li><a href="/apps/'+app+'/'+app+'.fun">'+app+'</a></li>'
	})

	var html = 'Examples<br/><ul>' + examples + '</ul>Apps<br/><ul>'+apps
	res.writeHead(200, { 'Content-Type':'text/html', 'Content-Length':html.length })
	res.end(html)
}

function develop(res) {
	res.writeHead(200, { 'Content-Type':'text/html' })
	res.end([
		'<form target="output" action="/compile" method="post" style="position:relative;">',
		'	<textarea name="code" style="width:600px;height:100%; float:left;">"Hello world"</textarea>',
		'	<input type="submit" style="position:absolute; top:5px; left:537px;">',
		'</form>',
		'<iframe style="margin:0 0 0 10px; width:600px; height:100%;" name="output" />'
	].join('\n'))
}

function compile(req, res) {
	var code = ''
	req.on('data', function(data) { code += data })
	req.on('end', function() {
		try {
			// code == "code=<URI+encoded+code>"
			var result = compiler.compileCode(decodeURIComponent(code.substr(5).replace(/\+/g, ' ')))
		} catch(e) {
			res.writeHead(500)
			res.end(e.stack)
			return
		}
		res.writeHead(200)
		res.end(result)
	})
}
