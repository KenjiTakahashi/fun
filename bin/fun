#!/usr/bin/env node

var fs = require('fs'),
	sys = require('sys'),
	http = require('http'),
	path = require('path'),
	optimist = require('optimist'),
	tokenizer = require('../lib/tokenizer'),
	parser = require('../lib/parser'),
	resolver = require('../lib/resolver'),
	compiler = require('../lib/compiler')

/* Commandline options
 *********************/
var argv = optimist.usage('Usage: $0 app.fun [--help --host=127.0.0.1 --port=8080]').argv

// Variables
var port = argv.port || 8080,
	host = argv.host || '127.0.0.1'

if (argv.h || argv.help) {
	sys.puts(fs.readFileSync('./help.txt'))
	process.exit(0)
}

http.createServer(function(req, res) {
	if (req.url == '/favicon.ico') { return res.end(); }
	var filePath = __dirname + '/../examples' + req.url
	if (!fs.statSync(filePath).isFile()) {
		res.end('Not found. Try /simple.fun')
		return
	}
	try {
		res.end(compileAppHTML(filePath))
	} catch(e) {
		res.end(e.stack)
	}
}).listen(port, host)
console.log("fun running in development mode on", host+':'+port)

function compileAppHTML(sourceFile) {
	var tokens = tokenizer.tokenizeFile(sourceFile),
		ast = parser.parse(tokens),
		resolved = resolver.resolve(ast),
		compiledJS = compiler.compile(resolved),
		runtimeUtilJS = fs.readFileSync(__dirname + '/../lib/runtimeUtil.js')
	
	return [
		'<!doctype html>',
		'<html>',
		'<head></head>',
		'<body>',
		'	<script>',
			runtimeUtilJS + "\n" + compiledJS,
		'	</script>',
		'</body>',
		'</html>'
	].join('\n')
}
