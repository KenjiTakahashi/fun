TASKS

- "Composite statements"
	X 1) rename parseValueOrAlias to parseValue
	X 2) in parseValue, if parsed number, text or alias
		if next token is operator (e.g. "+")
			parseCompositeStatement(value, operator)
	3) <input data=Local.x /> "+" <input data=Local.y /> "=" Local.x + Local.y
	4) Grouped composite statements, e.g. (6 * (5 + 4))

- "Deferred values"
	1) Come up with a common way to wait on a series of values before executing a function of compiled code
	2) If all the values are static, don't bother creating a delayed function

- "Tag-based type inference"
	1) Tags with data should have the dataType attribute <input data=Local.x dataType="number" />
	2) Tags should have custom implementations, that declare what types of data they accept

- "Template arguments"
	1) Pass in arguments to template invocations
		let aTemplate = template(item) { "Hello " item.name }
		let anotherTemplate = template(name) { "Hello " name }
		aTemplate(@1)
		aTemplate("world")

BUGS

- "Already subscribed to item property doesn't show up after created"
	Add these lines to the top of chatrooms.fun and start with no data:
		let a = @1
		a.name
	Now create a new room. The room does not show up in the for loop, nor does it show up at the "a.name" hook
